AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS

  Sample SAM Template for AWS

  '
Parameters:
  DefaultEmail:
    Description: Email to use as a Default in the event that the Table wasn't updated
    Type: String
  Domain:
    Description: Domain Name to use for the MX Record
    Type: String
  MyHostedZone:
    Description: HostedZone ID for the Domain's Public Hosted Zone in Route53
    Type: String
Resources:
  BucketPermission:
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Ref: HelloWorldFunction
      Principal: s3.amazonaws.com
      SourceAccount:
        Ref: AWS::AccountId
      SourceArn:
        Fn::Sub: arn:aws:s3:::inbound-email-${AWS::AccountId}-${AWS::Region}
    Type: AWS::Lambda::Permission
  EmailBucket:
    DependsOn: BucketPermission
    Properties:
      BucketName:
        Fn::Sub: inbound-email-${AWS::AccountId}-${AWS::Region}
      NotificationConfiguration:
        LambdaConfigurations:
        - Event: s3:ObjectCreated:*
          Filter:
            S3Key:
              Rules:
              - Name: prefix
                Value: inbound_email/
          Function:
            Fn::GetAtt:
            - HelloWorldFunction
            - Arn
    Type: AWS::S3::Bucket
  EmailRecordsForRoute53:
    Properties:
      HostedZoneName:
        Fn::Sub: ${Domain}.
      Name:
        Fn::Sub: ${Domain}.
      ResourceRecords:
      - Fn::Sub: 10 inbound-smtp.${AWS::Region}.amazonaws.com
      TTL: '300'
      Type: MX
    Type: AWS::Route53::RecordSet
  EmailRule:
    DependsOn: PutEmailBucketPolicy
    Properties:
      Rule:
        Actions:
        - S3Action:
            BucketName:
              Ref: EmailBucket
            ObjectKeyPrefix: inbound_email/
        Enabled: true
        ScanEnabled: true
        TlsPolicy: Require
      RuleSetName:
        Ref: RuleSet
    Type: AWS::SES::ReceiptRule
  EmailToAccountId:
    Properties:
      AttributeDefinitions:
      - AttributeName: EmailAddress
        AttributeType: S
      KeySchema:
      - AttributeName: EmailAddress
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: '3'
        WriteCapacityUnits: '1'
    Type: AWS::DynamoDB::Table
  HelloWorldFunction:
    Properties:
      CodeUri: s3://rhboyd-code/986434777eb3ce1ae78c9483273a8529
      Environment:
        Variables:
          DEFAULT_EMAIL:
            Ref: DefaultEmail
          TABLE_NAME:
            Ref: EmailToAccountId
      Handler: app.lambda_handler
      Policies:
      - Statement:
        - Action:
          - s3:GetObject
          Effect: Allow
          Resource:
            Fn::Sub: arn:aws:s3:::inbound-email-${AWS::AccountId}-${AWS::Region}/inbound_email/*
      - Statement:
        - Action:
          - ses:SendEmail
          Effect: Allow
          Resource: '*'
      - Statement:
        - Action:
          - organizations:ListAccounts
          Effect: Allow
          Resource: '*'
      - Statement:
        - Action:
          - dynamodb:GetItem
          - dynamodb:PutItem
          Effect: Allow
          Resource:
            Fn::GetAtt:
            - EmailToAccountId
            - Arn
      Runtime: python3.7
      Timeout: 300
    Type: AWS::Serverless::Function
  PutEmailBucketPolicy:
    Properties:
      Bucket:
        Ref: EmailBucket
      PolicyDocument:
        Statement:
        - Action:
          - s3:PutObject
          Condition:
            StringEquals:
              aws:Referer:
                Fn::Sub: ${AWS::AccountId}
          Effect: Allow
          Principal:
            Service: ses.amazonaws.com
          Resource:
            Fn::Sub: arn:aws:s3:::${EmailBucket}/inbound_email/*
    Type: AWS::S3::BucketPolicy
  RuleSet:
    Properties:
      RuleSetName: SendToS3
    Type: AWS::SES::ReceiptRuleSet
  SESVerifierFunction:
    Properties:
      CodeUri: s3://rhboyd-code/99b796e6642a3e479f2a198b39fbed45
      Handler: app.lambda_handler
      Policies:
      - Statement:
        - Action:
          - route53:GetHostedZone
          - route53:ChangeResourceRecordSets
          Effect: Allow
          Resource:
            Fn::Sub: arn:aws:route53:::hostedzone/${MyHostedZone}
      - Statement:
        - Action:
          - ses:VerifyDomainDkim
          - ses:VerifyDomainIdentity
          - ses:SetActiveReceiptRuleSet
          Effect: Allow
          Resource: '*'
      Runtime: python3.7
      Timeout: 300
    Type: AWS::Serverless::Function
  SesVerificationRecords:
    Properties:
      HostedZoneId:
        Ref: MyHostedZone
      RuleSetName:
        Ref: RuleSet
      ServiceToken:
        Fn::GetAtt:
        - SESVerifierFunction
        - Arn
    Type: Custom::AmazonSesVerificationRecords
Transform: AWS::Serverless-2016-10-31
